{
	"compiler": {
		"version": "0.8.15+commit.e14f2714"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "NewOwnerSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fundsAvailable",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "ReceivedFunds",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "votedFor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "VoteForNewOwner",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fundsAvailable",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "WithdrawFunds",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newGuardian",
						"type": "address"
					}
				],
				"name": "addGuardian",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "balances",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "checkAllowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "guardianAddress",
						"type": "address"
					}
				],
				"name": "checkGuardian",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "candidate",
						"type": "address"
					}
				],
				"name": "countTrueVotes",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "resetAddressAllowance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "newAllowance",
						"type": "uint256"
					}
				],
				"name": "setAllowance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "candidate",
						"type": "address"
					}
				],
				"name": "voteNewOwner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addGuardian(address)": {
					"details": "Adds a new guardian",
					"params": {
						"newGuardian": "The address of the new guardian"
					}
				},
				"checkAllowance(address)": {
					"details": "Checks the allowance of a specified address",
					"params": {
						"addr": "The address to check"
					},
					"returns": {
						"_0": "The allowance amount"
					}
				},
				"checkGuardian(address)": {
					"details": "Checks if an address is a guardian",
					"params": {
						"guardianAddress": "The address to check"
					},
					"returns": {
						"_0": "True if the address is a guardian, false otherwise"
					}
				},
				"constructor": {
					"details": "Sets the contract deployer as the owner and the first guardian"
				},
				"countTrueVotes(address)": {
					"details": "Counts the number of true votes for a specified address",
					"params": {
						"candidate": "The address to count votes for"
					},
					"returns": {
						"_0": "count The number of votes"
					}
				},
				"deposit()": {
					"details": "Records the deposit and updates the sender's balance"
				},
				"resetAddressAllowance(address)": {
					"details": "Resets the allowance for a specified address",
					"params": {
						"addr": "The address for which to reset the allowance"
					}
				},
				"setAllowance(address,uint256)": {
					"details": "Sets the allowance for a specified address",
					"params": {
						"addr": "The address for which to set the allowance",
						"newAllowance": "The new allowance amount"
					}
				},
				"voteNewOwner(address)": {
					"details": "Allows guardians to vote for a new owner",
					"params": {
						"candidate": "The address of the candidate for the new owner"
					}
				},
				"withdraw(address,uint256)": {
					"details": "Allows the sender to withdraw a specified amount of Ether to a specified address",
					"params": {
						"amount": "The amount of Ether to withdraw",
						"to": "The address to send the Ether to"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/EtherWallet2.sol": "EtherWallet2"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/EtherWallet2.sol": {
			"keccak256": "0x3a277706a432cacb885d6ae4167dbf0d718c38e59c7c9296ca5a361d1acad037",
			"license": "MIT",
			"urls": [
				"bzz-raw://0d92c2755960f88a5f30748a50ae806d99c2722ba78e9460b17734339f60f527",
				"dweb:/ipfs/QmeDxzmgSCvzSTVGD7khXwSVj1jagKRNvYaFzj4YApipy2"
			]
		}
	},
	"version": 1
}